// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.3
// source: patients_service.proto

package patients_protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Patient_Gender int32

const (
	Patient_UNSPECIFIED Patient_Gender = 0
	Patient_MALE        Patient_Gender = 1
	Patient_FEMALE      Patient_Gender = 2
)

// Enum value maps for Patient_Gender.
var (
	Patient_Gender_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "MALE",
		2: "FEMALE",
	}
	Patient_Gender_value = map[string]int32{
		"UNSPECIFIED": 0,
		"MALE":        1,
		"FEMALE":      2,
	}
)

func (x Patient_Gender) Enum() *Patient_Gender {
	p := new(Patient_Gender)
	*p = x
	return p
}

func (x Patient_Gender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Patient_Gender) Descriptor() protoreflect.EnumDescriptor {
	return file_patients_service_proto_enumTypes[0].Descriptor()
}

func (Patient_Gender) Type() protoreflect.EnumType {
	return &file_patients_service_proto_enumTypes[0]
}

func (x Patient_Gender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Patient_Gender.Descriptor instead.
func (Patient_Gender) EnumDescriptor() ([]byte, []int) {
	return file_patients_service_proto_rawDescGZIP(), []int{10, 0}
}

type GetPatientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Id    int32  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPatientRequest) Reset() {
	*x = GetPatientRequest{}
	mi := &file_patients_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPatientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientRequest) ProtoMessage() {}

func (x *GetPatientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_patients_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientRequest.ProtoReflect.Descriptor instead.
func (*GetPatientRequest) Descriptor() ([]byte, []int) {
	return file_patients_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetPatientRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetPatientRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetPatientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Patient *Patient `protobuf:"bytes,1,opt,name=patient,proto3" json:"patient,omitempty"`
}

func (x *GetPatientResponse) Reset() {
	*x = GetPatientResponse{}
	mi := &file_patients_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPatientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientResponse) ProtoMessage() {}

func (x *GetPatientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_patients_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientResponse.ProtoReflect.Descriptor instead.
func (*GetPatientResponse) Descriptor() ([]byte, []int) {
	return file_patients_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetPatientResponse) GetPatient() *Patient {
	if x != nil {
		return x.Patient
	}
	return nil
}

type GetPatientsIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token  string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Limit  int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Search string `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *GetPatientsIDsRequest) Reset() {
	*x = GetPatientsIDsRequest{}
	mi := &file_patients_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPatientsIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientsIDsRequest) ProtoMessage() {}

func (x *GetPatientsIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_patients_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientsIDsRequest.ProtoReflect.Descriptor instead.
func (*GetPatientsIDsRequest) Descriptor() ([]byte, []int) {
	return file_patients_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetPatientsIDsRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetPatientsIDsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetPatientsIDsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetPatientsIDsRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type GetPatientsIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   int32   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Results []int32 `protobuf:"varint,2,rep,packed,name=results,proto3" json:"results,omitempty"`
}

func (x *GetPatientsIDsResponse) Reset() {
	*x = GetPatientsIDsResponse{}
	mi := &file_patients_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPatientsIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientsIDsResponse) ProtoMessage() {}

func (x *GetPatientsIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_patients_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientsIDsResponse.ProtoReflect.Descriptor instead.
func (*GetPatientsIDsResponse) Descriptor() ([]byte, []int) {
	return file_patients_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetPatientsIDsResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetPatientsIDsResponse) GetResults() []int32 {
	if x != nil {
		return x.Results
	}
	return nil
}

type CreatePatientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token             string                      `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Name              string                      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PersonalId        *Patient_PersonalID         `protobuf:"bytes,3,opt,name=personal_id,json=personalId,proto3" json:"personal_id,omitempty"`
	Gender            Patient_Gender              `protobuf:"varint,4,opt,name=gender,proto3,enum=patients.Patient_Gender" json:"gender,omitempty"`
	PhoneNumber       string                      `protobuf:"bytes,5,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Languages         []string                    `protobuf:"bytes,6,rep,name=languages,proto3" json:"languages,omitempty"`
	BirthDate         string                      `protobuf:"bytes,7,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	EmergencyContacts []*Patient_EmergencyContact `protobuf:"bytes,8,rep,name=emergency_contacts,json=emergencyContacts,proto3" json:"emergency_contacts,omitempty"`
	ReferredBy        string                      `protobuf:"bytes,9,opt,name=referred_by,json=referredBy,proto3" json:"referred_by,omitempty"`
	SpecialNote       string                      `protobuf:"bytes,10,opt,name=special_note,json=specialNote,proto3" json:"special_note,omitempty"`
	NeedsTranslator   bool                        `protobuf:"varint,11,opt,name=needs_translator,json=needsTranslator,proto3" json:"needs_translator,omitempty"`
}

func (x *CreatePatientRequest) Reset() {
	*x = CreatePatientRequest{}
	mi := &file_patients_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePatientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePatientRequest) ProtoMessage() {}

func (x *CreatePatientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_patients_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePatientRequest.ProtoReflect.Descriptor instead.
func (*CreatePatientRequest) Descriptor() ([]byte, []int) {
	return file_patients_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePatientRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CreatePatientRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePatientRequest) GetPersonalId() *Patient_PersonalID {
	if x != nil {
		return x.PersonalId
	}
	return nil
}

func (x *CreatePatientRequest) GetGender() Patient_Gender {
	if x != nil {
		return x.Gender
	}
	return Patient_UNSPECIFIED
}

func (x *CreatePatientRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *CreatePatientRequest) GetLanguages() []string {
	if x != nil {
		return x.Languages
	}
	return nil
}

func (x *CreatePatientRequest) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *CreatePatientRequest) GetEmergencyContacts() []*Patient_EmergencyContact {
	if x != nil {
		return x.EmergencyContacts
	}
	return nil
}

func (x *CreatePatientRequest) GetReferredBy() string {
	if x != nil {
		return x.ReferredBy
	}
	return ""
}

func (x *CreatePatientRequest) GetSpecialNote() string {
	if x != nil {
		return x.SpecialNote
	}
	return ""
}

func (x *CreatePatientRequest) GetNeedsTranslator() string {
	if x != nil {
		return x.NeedsTranslator
	}
	return ""
}

type CreatePatientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreatePatientResponse) Reset() {
	*x = CreatePatientResponse{}
	mi := &file_patients_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePatientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePatientResponse) ProtoMessage() {}

func (x *CreatePatientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_patients_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePatientResponse.ProtoReflect.Descriptor instead.
func (*CreatePatientResponse) Descriptor() ([]byte, []int) {
	return file_patients_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreatePatientResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeletePatientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Id    int32  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePatientRequest) Reset() {
	*x = DeletePatientRequest{}
	mi := &file_patients_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePatientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePatientRequest) ProtoMessage() {}

func (x *DeletePatientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_patients_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePatientRequest.ProtoReflect.Descriptor instead.
func (*DeletePatientRequest) Descriptor() ([]byte, []int) {
	return file_patients_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeletePatientRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DeletePatientRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeletePatientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePatientResponse) Reset() {
	*x = DeletePatientResponse{}
	mi := &file_patients_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePatientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePatientResponse) ProtoMessage() {}

func (x *DeletePatientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_patients_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePatientResponse.ProtoReflect.Descriptor instead.
func (*DeletePatientResponse) Descriptor() ([]byte, []int) {
	return file_patients_service_proto_rawDescGZIP(), []int{7}
}

type UpdatePatientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token   string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Patient *Patient `protobuf:"bytes,2,opt,name=patient,proto3" json:"patient,omitempty"`
}

func (x *UpdatePatientRequest) Reset() {
	*x = UpdatePatientRequest{}
	mi := &file_patients_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePatientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePatientRequest) ProtoMessage() {}

func (x *UpdatePatientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_patients_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePatientRequest.ProtoReflect.Descriptor instead.
func (*UpdatePatientRequest) Descriptor() ([]byte, []int) {
	return file_patients_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdatePatientRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UpdatePatientRequest) GetPatient() *Patient {
	if x != nil {
		return x.Patient
	}
	return nil
}

type UpdatePatientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdatePatientResponse) Reset() {
	*x = UpdatePatientResponse{}
	mi := &file_patients_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePatientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePatientResponse) ProtoMessage() {}

func (x *UpdatePatientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_patients_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePatientResponse.ProtoReflect.Descriptor instead.
func (*UpdatePatientResponse) Descriptor() ([]byte, []int) {
	return file_patients_service_proto_rawDescGZIP(), []int{9}
}

func (x *UpdatePatientResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Patient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int32                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Active            bool                        `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`
	Name              string                      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	PersonalId        *Patient_PersonalID         `protobuf:"bytes,4,opt,name=personal_id,json=personalId,proto3" json:"personal_id,omitempty"`
	Gender            Patient_Gender              `protobuf:"varint,5,opt,name=gender,proto3,enum=patients.Patient_Gender" json:"gender,omitempty"`
	PhoneNumber       string                      `protobuf:"bytes,6,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Languages         []string                    `protobuf:"bytes,7,rep,name=languages,proto3" json:"languages,omitempty"`
	BirthDate         string                      `protobuf:"bytes,8,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	Age               int32                       `protobuf:"varint,9,opt,name=age,proto3" json:"age,omitempty"`
	ReferredBy        string                      `protobuf:"bytes,10,opt,name=referred_by,json=referredBy,proto3" json:"referred_by,omitempty"`
	EmergencyContacts []*Patient_EmergencyContact `protobuf:"bytes,11,rep,name=emergency_contacts,json=emergencyContacts,proto3" json:"emergency_contacts,omitempty"`
	SpecialNote       string                      `protobuf:"bytes,12,opt,name=special_note,json=specialNote,proto3" json:"special_note,omitempty"`
	NeedsTranslator   bool                        `protobuf:"varint,13,opt,name=needs_translator,json=needsTranslator,proto3" json:"needs_translator,omitempty"`
}

func (x *Patient) Reset() {
	*x = Patient{}
	mi := &file_patients_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Patient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Patient) ProtoMessage() {}

func (x *Patient) ProtoReflect() protoreflect.Message {
	mi := &file_patients_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Patient.ProtoReflect.Descriptor instead.
func (*Patient) Descriptor() ([]byte, []int) {
	return file_patients_service_proto_rawDescGZIP(), []int{10}
}

func (x *Patient) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Patient) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Patient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Patient) GetPersonalId() *Patient_PersonalID {
	if x != nil {
		return x.PersonalId
	}
	return nil
}

func (x *Patient) GetGender() Patient_Gender {
	if x != nil {
		return x.Gender
	}
	return Patient_UNSPECIFIED
}

func (x *Patient) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *Patient) GetLanguages() []string {
	if x != nil {
		return x.Languages
	}
	return nil
}

func (x *Patient) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *Patient) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Patient) GetReferredBy() string {
	if x != nil {
		return x.ReferredBy
	}
	return ""
}

func (x *Patient) GetEmergencyContacts() []*Patient_EmergencyContact {
	if x != nil {
		return x.EmergencyContacts
	}
	return nil
}

func (x *Patient) GetSpecialNote() string {
	if x != nil {
		return x.SpecialNote
	}
	return ""
}

func (x *Patient) GetNeedsTranslator() string {
	if x != nil {
		return x.NeedsTranslator
	}
	return ""
}

type Patient_PersonalID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Patient_PersonalID) Reset() {
	*x = Patient_PersonalID{}
	mi := &file_patients_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Patient_PersonalID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Patient_PersonalID) ProtoMessage() {}

func (x *Patient_PersonalID) ProtoReflect() protoreflect.Message {
	mi := &file_patients_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Patient_PersonalID.ProtoReflect.Descriptor instead.
func (*Patient_PersonalID) Descriptor() ([]byte, []int) {
	return file_patients_service_proto_rawDescGZIP(), []int{10, 0}
}

func (x *Patient_PersonalID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Patient_PersonalID) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Patient_EmergencyContact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Closeness string `protobuf:"bytes,2,opt,name=closeness,proto3" json:"closeness,omitempty"`
	Phone     string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *Patient_EmergencyContact) Reset() {
	*x = Patient_EmergencyContact{}
	mi := &file_patients_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Patient_EmergencyContact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Patient_EmergencyContact) ProtoMessage() {}

func (x *Patient_EmergencyContact) ProtoReflect() protoreflect.Message {
	mi := &file_patients_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Patient_EmergencyContact.ProtoReflect.Descriptor instead.
func (*Patient_EmergencyContact) Descriptor() ([]byte, []int) {
	return file_patients_service_proto_rawDescGZIP(), []int{10, 1}
}

func (x *Patient_EmergencyContact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Patient_EmergencyContact) GetCloseness() string {
	if x != nil {
		return x.Closeness
	}
	return ""
}

func (x *Patient_EmergencyContact) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

var File_patients_service_proto protoreflect.FileDescriptor

var file_patients_service_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0x39, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x41, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x22, 0x73, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x49,
	0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x48, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22,
	0xd3, 0x03, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x49,
	0x64, 0x12, 0x30, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x51, 0x0a, 0x12, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x52, 0x11, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x65, 0x64, 0x42, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6e, 0x65,
	0x65, 0x64, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x27, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3c,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x59, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x22, 0x27, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa9, 0x05, 0x0a, 0x07, 0x50, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x49, 0x44, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x64,
	0x12, 0x30, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x64, 0x42, 0x79, 0x12, 0x51, 0x0a, 0x12, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e,
	0x63, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x11, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6e,
	0x65, 0x65, 0x64, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x30, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x5a, 0x0a, 0x10, 0x45, 0x6d, 0x65, 0x72,
	0x67, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x22, 0x2f, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x0f,
	0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x45, 0x4d,
	0x41, 0x4c, 0x45, 0x10, 0x02, 0x32, 0xa5, 0x03, 0x0a, 0x0f, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x49, 0x44, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x44, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x44, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x70,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3e, 0x5a,
	0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x65, 0x6b, 0x43,
	0x6c, 0x69, 0x6e, 0x69, 0x63, 0x2f, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2d, 0x4d,
	0x69, 0x63, 0x72, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_patients_service_proto_rawDescOnce sync.Once
	file_patients_service_proto_rawDescData = file_patients_service_proto_rawDesc
)

func file_patients_service_proto_rawDescGZIP() []byte {
	file_patients_service_proto_rawDescOnce.Do(func() {
		file_patients_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_patients_service_proto_rawDescData)
	})
	return file_patients_service_proto_rawDescData
}

var file_patients_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_patients_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_patients_service_proto_goTypes = []any{
	(Patient_Gender)(0),              // 0: patients.Patient.Gender
	(*GetPatientRequest)(nil),        // 1: patients.GetPatientRequest
	(*GetPatientResponse)(nil),       // 2: patients.GetPatientResponse
	(*GetPatientsIDsRequest)(nil),    // 3: patients.GetPatientsIDsRequest
	(*GetPatientsIDsResponse)(nil),   // 4: patients.GetPatientsIDsResponse
	(*CreatePatientRequest)(nil),     // 5: patients.CreatePatientRequest
	(*CreatePatientResponse)(nil),    // 6: patients.CreatePatientResponse
	(*DeletePatientRequest)(nil),     // 7: patients.DeletePatientRequest
	(*DeletePatientResponse)(nil),    // 8: patients.DeletePatientResponse
	(*UpdatePatientRequest)(nil),     // 9: patients.UpdatePatientRequest
	(*UpdatePatientResponse)(nil),    // 10: patients.UpdatePatientResponse
	(*Patient)(nil),                  // 11: patients.Patient
	(*Patient_PersonalID)(nil),       // 12: patients.Patient.PersonalID
	(*Patient_EmergencyContact)(nil), // 13: patients.Patient.EmergencyContact
}
var file_patients_service_proto_depIdxs = []int32{
	11, // 0: patients.GetPatientResponse.patient:type_name -> patients.Patient
	12, // 1: patients.CreatePatientRequest.personal_id:type_name -> patients.Patient.PersonalID
	0,  // 2: patients.CreatePatientRequest.gender:type_name -> patients.Patient.Gender
	13, // 3: patients.CreatePatientRequest.emergency_contacts:type_name -> patients.Patient.EmergencyContact
	11, // 4: patients.UpdatePatientRequest.patient:type_name -> patients.Patient
	12, // 5: patients.Patient.personal_id:type_name -> patients.Patient.PersonalID
	0,  // 6: patients.Patient.gender:type_name -> patients.Patient.Gender
	13, // 7: patients.Patient.emergency_contacts:type_name -> patients.Patient.EmergencyContact
	1,  // 8: patients.PatientsService.GetPatient:input_type -> patients.GetPatientRequest
	3,  // 9: patients.PatientsService.GetPatientsIDs:input_type -> patients.GetPatientsIDsRequest
	5,  // 10: patients.PatientsService.CreatePatient:input_type -> patients.CreatePatientRequest
	7,  // 11: patients.PatientsService.DeletePatient:input_type -> patients.DeletePatientRequest
	9,  // 12: patients.PatientsService.UpdatePatient:input_type -> patients.UpdatePatientRequest
	2,  // 13: patients.PatientsService.GetPatient:output_type -> patients.GetPatientResponse
	4,  // 14: patients.PatientsService.GetPatientsIDs:output_type -> patients.GetPatientsIDsResponse
	6,  // 15: patients.PatientsService.CreatePatient:output_type -> patients.CreatePatientResponse
	8,  // 16: patients.PatientsService.DeletePatient:output_type -> patients.DeletePatientResponse
	10, // 17: patients.PatientsService.UpdatePatient:output_type -> patients.UpdatePatientResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_patients_service_proto_init() }
func file_patients_service_proto_init() {
	if File_patients_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_patients_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_patients_service_proto_goTypes,
		DependencyIndexes: file_patients_service_proto_depIdxs,
		EnumInfos:         file_patients_service_proto_enumTypes,
		MessageInfos:      file_patients_service_proto_msgTypes,
	}.Build()
	File_patients_service_proto = out.File
	file_patients_service_proto_rawDesc = nil
	file_patients_service_proto_goTypes = nil
	file_patients_service_proto_depIdxs = nil
}
